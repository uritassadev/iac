name: Terraform Cloud - Cloudflare

on:
  push:
    branches:
      - master
    paths:
      - cloudflare/terraform/**
  workflow_dispatch:
    inputs:
      apply:
        type: boolean
        description: 'Run Terraform Apply?'
        required: true
        default: false
      destroy:
        type: boolean
        description: 'Run Terraform Destroy?'
        required: true
        default: false

permissions:
  contents: read
  pull-requests: write

env:
  TF_CLOUD_ORGANIZATION: "uritassa"
  TF_WORKSPACE: "cloudflare"
  TF_API_TOKEN: ${{secrets.TF_API_TOKEN}}
  CONFIG_DIRECTORY: "./cloudflare"

jobs:
  terraform-cloud-plan:
    name: Terraform Cloud Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event.inputs.apply != 'true' && github.event.inputs.destroy != 'true')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}