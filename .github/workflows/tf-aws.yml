name: Terraform - AWS

on:
  push:
    branches:
      - master
    paths:
      - aws/terraform/**      
  workflow_dispatch:
    inputs:
      working_directory:
        required: true
        description: 'Enter your working directory'
        type: string
        default: 'aws/terraform'
      apply:
        type: boolean
        description: 'Run Terraform Apply?'
        required: true
        default: false
      destroy:
        type: boolean
        description: 'Run Terraform Destroy?'
        required: true
        default: false

permissions:
  id-token: write
  contents: read
env:
  REGION: "eu-central-1"
  ARN_ROLE: "arn:aws:iam::750246861878:role/gh-actions"
  terraform_version: "1.12.0"


jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || ( github.event_name == 'workflow_dispatch' && github.event.inputs.apply != 'true' && github.event.inputs.destroy != 'true')
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory || 'aws/terraform' }}
    steps:
      - uses: actions/checkout@v2
      - name: Auth AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ARN_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: terraform-plan


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.apply == true
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Auth AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ARN_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: terraform-plan
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -no-color -input=false

  destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.destroy == true
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}
    steps:
      - uses: actions/checkout@v2
      - name: Auth AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ARN_ROLE }}
          aws-region: ${{ env.REGION }}
          role-session-name: terraform-plan
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraform_version }}
      - name: Terraform init
        id: init
        run: terraform init

      - name: Terraform destroy
        id: destroy
        run: terraform destroy -auto-approve